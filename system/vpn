#!/usr/bin/env bash

WIREGUARD_DIR="/etc/wireguard"

usage() {
  echo "Usage: vpn <command> [name]"
  echo "Commands:"
  echo "  list           List available VPNs"
  echo "  on|up [name]   Connect to a VPN (best match or lowest latency if omitted)"
  echo "  off|down [name] Disconnect a VPN (or all if name is omitted)"
  exit 1
}

list_vpns() {
  find "$WIREGUARD_DIR" -maxdepth 1 -name '*.conf' -printf '%f\n' | sed 's/\.conf$//' | sort
}

find_best_vpn() {
  local best=""
  local lowest=9999

  for conf in "$WIREGUARD_DIR"/*.conf; do
    [[ -f "$conf" ]] || continue
    local name=$(basename "$conf" .conf)
    local endpoint=$(grep -i '^Endpoint' "$conf" | cut -d= -f2 | xargs | cut -d: -f1)

    if [[ -n "$endpoint" ]]; then
      local ping_time=$(ping -c1 -W1 "$endpoint" 2>/dev/null | awk -F'time=' '/time=/{print $2}' | cut -d' ' -f1)
      if [[ -n "$ping_time" ]]; then
        if (( $(echo "$ping_time < $lowest" | bc -l) )); then
          best="$name"
          lowest="$ping_time"
        fi
      fi
    fi
  done

  echo "$best"
}

fuzzy_match() {
  local input="$1"
  for vpn in $(list_vpns); do
    if [[ "$vpn" == "$input" ]]; then
      echo "$vpn"
      return
    fi
  done
  for vpn in $(list_vpns); do
    if [[ "${vpn,,}" == *"${input,,}"* ]]; then
      echo "$vpn"
      return
    fi
  done
}

vpn_on() {
  local input="$1"
  local match

  if [[ -z "$input" ]]; then
    match=$(find_best_vpn)
    if [[ -z "$match" ]]; then
      echo "No reachable VPNs found."
      exit 1
    fi
    echo "Connecting to best VPN: $match"
  else
    match=$(fuzzy_match "$input")
    if [[ -z "$match" ]]; then
      echo "No match for '$input'"
      exit 1
    fi
  fi

  # Disconnect any currently connected VPNs
  for intf in $(wg show interfaces 2>/dev/null); do
    sudo wg-quick down "$intf"
  done

  sudo wg-quick up "$match"
}

vpn_off() {
  local input="$1"
  if [[ -z "$input" ]]; then
    for intf in $(wg show interfaces 2>/dev/null); do
      sudo wg-quick down "$intf"
    done
  else
    local match=$(fuzzy_match "$input")
    if [[ -z "$match" ]]; then
      echo "No match for '$input'"
      exit 1
    fi
    sudo wg-quick down "$match"
  fi
}

case "$1" in
  list)
    list_vpns
    ;;
  on|up)
    shift
    vpn_on "$1"
    ;;
  off|down)
    shift
    vpn_off "$1"
    ;;
  *)
    usage
    ;;
esac
